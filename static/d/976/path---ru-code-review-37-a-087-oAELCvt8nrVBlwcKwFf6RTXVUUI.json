{"data":{"site":{"siteMetadata":{"title":"slonoed","author":"Dmitry Manannikov","siteUrl":"https://slonoed.net"}},"markdownRemark":{"id":"5d33cc6f-8e8e-57c1-81aa-69410e7155b0","html":"<p>В этом тексте я попытался сформулировать основные принципы хорошего, а главное, полезного код ревью.\nЯ постарался сделать текст достаточно универсальным, чтобы применить к любой технологии и любой\nкоманде.</p>\n<h2 id=\"цели-ревью\"><a href=\"#%D1%86%D0%B5%D0%BB%D0%B8-%D1%80%D0%B5%D0%B2%D1%8C%D1%8E\" aria-label=\"цели ревью permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Цели ревью</h2>\n<p>Давайте определимся с целями код ревью.</p>\n<ol>\n<li>Проверка соответствия задаче</li>\n<li>Проверка логики написанного кода</li>\n<li>Проверка читаемости</li>\n<li>Проверка на необходимость рефакторинга</li>\n<li>Распространение знаний о коде</li>\n</ol>\n<p>По пунктам:</p>\n<p>Вносимые изменения решают какую-либо задачу (чинят баг, добавляют новую функциональность, улучшают читаемость кода и так далее). Задача читающего проверить, что код соответствует задаче.</p>\n<p>Логика изменений должна быть понятна, и читающий должен иметь возможность проверить корректность в голове. Безусловно могут быть сложные задачи, в которых это сделать сложно или невозможно, но таких задач минимум.</p>\n<p>Проверка читаемости нужна по той причине, что написанный однажды код придётся читать множество раз, и ревью — отличная возможность проверить, что сделать это легко.</p>\n<p>Ревью предоставляет возможность получить обратную связь от других разработчиков. Это могут быть предложения переиспользовать\nуже готовый код, советы по улучшению текущего в соответствии с руководствами или лучшими практиками. В некотором роде про ревью можно думать как про ещё один уровень работы IDE, только с человеческим интеллектом.</p>\n<p>Ревью также является механизмом, помогающим другим членам команды понимать проект, даже если они не занимаются им или занимаются другой его частью.</p>\n<p>Очень важно понять, что в первую очередь <strong>ревью нужно тому, кто написал код, а не тому, кто его проверяет</strong>.\nРевью — это способ улучшить свою квалификацию, обучаясь у других людей.</p>\n<h2 id=\"не-цели-ревью\"><a href=\"#%D0%BD%D0%B5-%D1%86%D0%B5%D0%BB%D0%B8-%D1%80%D0%B5%D0%B2%D1%8C%D1%8E\" aria-label=\"не цели ревью permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Не цели ревью</h2>\n<p>Целями не являются:</p>\n<ol>\n<li>Дискуссия о цели вносимых изменений</li>\n<li>Проверка синтаксиса на корректность.</li>\n<li>Организация спора про те или иные конструкции языка</li>\n</ol>\n<p>Разберём по пунктам</p>\n<p>На ревью <strong>не обсуждается нужно ли вносить предложенные изменения</strong> в целом. Необходимость изменений, а так же их дизайн обсуждается ещё до написания кода. Если это новые элементы интерфейса, то есть дизайн и мокапы. Если это устранения бага, то есть багрепорт. Если это рефакторинг, то есть задача, в которой обсуждается, почему рефакторинг необходим. <em>На ревью не может быть ситуации, когда кто-то говорит, что фича не нужна.</em></p>\n<p>Проверка синтаксиса на явные ошибки, а также кода на возможные ошибки должны производится исключительно автоматически. Это может быть компилятор, линтер, статический анализатор. Такие проверки могут выполняться локально или на отдельном сервере. Важно, чтобы инструментарий или договоренности не позволяли создавать ревью, в котором есть подобные ошибки.</p>\n<p>Любые дискуссии на тему стиля кода и правил использования тех или иных конструкций языка должны быть полностью исключены из процесса ревью. Эти правила должны быть задокументированны отдельно и по возможности поддержаны инструментарием.</p>\n<h2 id=\"как-создавать-ревью\"><a href=\"#%D0%BA%D0%B0%D0%BA-%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%B2%D0%B0%D1%82%D1%8C-%D1%80%D0%B5%D0%B2%D1%8C%D1%8E\" aria-label=\"как создавать ревью permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Как создавать ревью</h2>\n<p>Теперь, когда у нас перед глазами есть цели мы можем сформулировать некоторые базовые правила создания ревью.</p>\n<p><em>В этом тексте я не акцентирую внимание на конкретном способе создания ревью, например Github pull request. Но все правила довольно общие и легко адаптируются к любому инструментарию.</em></p>\n<h3 id=\"написание-кода\"><a href=\"#%D0%BD%D0%B0%D0%BF%D0%B8%D1%81%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BA%D0%BE%D0%B4%D0%B0\" aria-label=\"написание кода permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Написание кода</h3>\n<p>Код ревью начинается с написания (изменения) кода. Эти изменения должны быть корректными, решающими конкретную задачу и написанными, согласно принятым в проекте стандартам.</p>\n<p>Я не хочу углубляться в рассуждения о том, как правильно писать код и нужно ли ставить точку с запятой, но хочу отметить один момент: <strong>если у вас есть возможность написать код проще, не теряя в качестве, сделайте его проще</strong>. Помните, что пишите вы один раз, а читать будут много.</p>\n<h3 id=\"разделение-кода-для-ревью\"><a href=\"#%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BA%D0%BE%D0%B4%D0%B0-%D0%B4%D0%BB%D1%8F-%D1%80%D0%B5%D0%B2%D1%8C%D1%8E\" aria-label=\"разделение кода для ревью permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Разделение кода для ревью</h3>\n<p>Важный вопрос: какой размер кода оптимален для ревью? Ответ: <strong>чем меньше, тем лучше</strong>.</p>\n<p>Зачастую бывает соблазн реализовать большую фичу и сделать огромный PR, после чего надеяться, что читающие смогут его осилить. На деле такие ревью обычно получают разрешение с пометкой “выглядит нормально” и отсутствием комментариев, что совсем не вяжется с задачей получить полезную обратную связь.</p>\n<p>Как разбивать большой набор изменений на меньшие? Я попробую сформулировать ответ для разработки фронтенда.</p>\n<ul>\n<li>Отделяйте общие компоненты (такие как кнопка, панель, и так далее) в отдельный набор изменений.</li>\n<li>Отделяйте функции-утилиты в отдельный набор изменений.</li>\n<li>Разделяйте большие компоненты (такие как страницы) на внешние и внутренние части.</li>\n</ul>\n<p>Другой вопрос: в каком порядке их сливать в основную ветку? Тут я видел два совершенно разных подхода.</p>\n<p>Первый — это начинать с больших компонентов, например, фрейма страницы, а потом добавлять внутренние. Такой подход поможет читающим понять контекст каждого нового изменения.</p>\n<p>Второй — это начинать с внутренних компонентов, делая их в изоляции и сопровождая примерами в виде storybook.</p>\n<p>Оба принципа имеют свои плюсы и минусы, и сложно сказать, какой более удобен для читающих.</p>\n<p>Важной частью эффективной работы с ревью является умение использовать инструменты. В случае с git необходимо понимание базовых операций, таких как commit, rebase, squash, reset, chunk и так далее. Зачастую GUI предоставляют интерфейс, достаточный для работы с ревью. Какой способ выбирать — решать вам.</p>\n<p>Расскажу про свой подход. Обычно во время разработки новой фичи я использую отдельную ветку из мастера. Делаю коммиты много и часто.\nКогда фича готова, я делаю reset по отношению к мастер ветке. И после этого начинаю добавлять коммиты по одному,\nвключая некоторое изменения. При этом каждый коммит атомарен и может быть отправлен на ревью сам по себе.\nТакой подход требует аккуратности, занимает время,\nи его нужно учитывать при оценке времени на реализацию фичи.</p>\n<h3 id=\"оформление-ревью\"><a href=\"#%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D1%80%D0%B5%D0%B2%D1%8C%D1%8E\" aria-label=\"оформление ревью permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Оформление ревью</h3>\n<p>Изменения кода всегда должны быть в каком-то контексте. Проще всего этого достичь, приложив ссылку на задачу или документ. В случае, если задача потребовала нескольких наборов изменений (смотри предыдущую секцию), имеет смысл добавить ссылки на изменения, которые должны быть внесены до текущего. В случае с UI имеет смысл приложить к ревью скриншоты “до” и “после” или даже видео. Это позволит читающему ознакомиться с результатом и быстрее понять код.</p>\n<h2 id=\"как-читать-ревью\"><a href=\"#%D0%BA%D0%B0%D0%BA-%D1%87%D0%B8%D1%82%D0%B0%D1%82%D1%8C-%D1%80%D0%B5%D0%B2%D1%8C%D1%8E\" aria-label=\"как читать ревью permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Как читать ревью</h2>\n<p>Чтение ревью во многом обязанность, и с этим ничего не поделать. Но есть в ней и привилегии: возможность повлиять на качество общего кода, а так же научиться новому.</p>\n<p>Относится к ревью чужого кода нужно так же серьёзно, как к написанию своего. Приняв изменения, вы тем самым подтверждаете, что считаете код правильным, а значит так же становитесь его владельцем и отвечаете за его поведение в продакшене. Подобную идею можно привить в команде на уровне культуры или даже формально (что, возможно, излишне).</p>\n<p>Добавляйте комментарии, которые предполагают какое-либо действие:</p>\n<ul>\n<li>Если вы видите орфографическую ошибку, напишите правильный вариант.</li>\n<li>Если вам непонятна логика программы, то попросите её упростить или написать комментарий в коде.</li>\n<li>Если логика понятна, но кажется излишне сложной, предложите идею для улучшения.</li>\n</ul>\n<p>В самом начале я уже упоминал, что на ревью не должно быть дискуссий на тему стиля кода. Если такое желание возникло, то дискуссию нужно выносить на отдельное обсуждение, после чего задокументировать и не возвращаться к вопросу.</p>\n<h2 id=\"как-вносить-правки-на-ревью\"><a href=\"#%D0%BA%D0%B0%D0%BA-%D0%B2%D0%BD%D0%BE%D1%81%D0%B8%D1%82%D1%8C-%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%BD%D0%B0-%D1%80%D0%B5%D0%B2%D1%8C%D1%8E\" aria-label=\"как вносить правки на ревью permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Как вносить правки на ревью</h2>\n<p>Сам процесс зависит от используемого вами инструментария и договоренностей. При этом важно, чтобы и начальные изменения, и все правки были просмотрены проверяющими.</p>\n<p>Ревью закончено, когда достигнут <strong>консенсус по всем замечаниям</strong>.</p>\n<p>Бывает, что внести правки невозможно или очень дорого, но они не являются критичными. Например, сроки поджимают и нужно выпускать релиз. В таком случае выходом может быть создание отдельной задачи в трекере и TODO с номером задачи в коде.</p>\n<h2 id=\"заключение\"><a href=\"#%D0%B7%D0%B0%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D0%B5\" aria-label=\"заключение permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Заключение</h2>\n<p>Код ревью — крайне ценный инструмент в процессе разработки ПО. При правильном подходе его можно сделать приятным и полезным для всей команды.</p>\n<p><em>Не стоит относиться к этому тексту как к строгому руководству.\nКак и любые другие подобные размышления, стоит брать только то, что вы считаете обоснованным\nи пойдёт вам (вашей команде) на пользу.</em></p>","timeToRead":7,"frontmatter":{"title":"Код ревью","date":"February 24, 2019","description":"Базовые принципы ревью кода, которые помогут сделать процесс не только приятным, но и полезным."},"fields":{"slug":"/ru/code-review/","langKey":"ru"}},"altPost":null},"pageContext":{"slug":"/ru/code-review/","altSlug":"/code-review/"}}